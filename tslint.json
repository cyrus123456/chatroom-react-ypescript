{
  "defaultSeverity": "error",
  "extends": [
    "tslint:recommended"
  ],
  "jsRules": {
    // 禁止给类的构造函数的参数添加修饰符
    "no-parameter-properties": false,
    // 禁止使用 debugger
    "no-debugger": false,
    // 禁止行尾有空格
    "no-trailing-whitespace": false,
    // 禁止无用的表达式
    "no-unused-expression": true,
    // 定义过的变量必须使用
    "no-unused-variable": true,
    // 变量必须先定义后使用
    "no-use-before-declare": true,
    // 禁止使用 var
    "no-var-keyword": true,
    // 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外
    "triple-equals": true,
    // 指定类成员的排序规则
    "member-ordering": false,
    // 禁止将 this 赋值给其他变量，除非是解构赋值
    "no-this-assignment": [
      false,
      {
        "allowed-names": [
          "^self$",
          "^that$"
        ],
        "allow-destructuring": true
      }
    ],
    // 必须使用箭头函数，除非是单独的函数声明或是命名函数
    "only-arrow-functions": [
      true,
      "allow-declarations",
      "allow-named-functions"
    ],
    // 禁止出现空代码块，允许 catch 是空代码块
    "no-empty": [
      true,
      "allow-empty-catch"
    ],
    // 禁止无用的类型断言
    "no-unnecessary-type-assertion": true,
    // 使用 return; 而不是 return undefined;
    "return-undefined": true,
    // 禁止对 array 使用 for in 循环
    "no-for-in-array": true,
    "comment-format": [
      true,
      "check-space"
    ],
    // 单行注释格式化规则
    // 定义函数时如果用到了覆写，则必须将覆写的函数写到一起
    "adjacent-overload-signatures": true,
    // 禁止对函数的参数重新赋值
    "no-parameter-reassignment": true,
    // if 后面必须有 {，除非是单行 if
    "curly": [
      true,
      "ignore-same-line"
    ],
    // for in 内部必须有 hasOwnProperty
    "forin": true,
    // 禁止在分支条件判断中有赋值操作
    "no-conditional-assignment": true,
    // 禁止使用 new 来生成 String, Number 或 Boolean
    "no-construct": true,
    // 禁止 super 在一个构造函数中出现两次
    "no-duplicate-super": true,
    // 禁止在 switch 语句中出现重复测试表达式的 case
    "no-duplicate-switch-case": true,
    // 禁止出现重复的变量定义或函数参数名
    "no-duplicate-variable": [
      true,
      "check-parameters"
    ],
    // 禁止使用 eval
    "no-eval": true,
    // 禁止对对象字面量进行类型断言（断言成 any 是允许的）
    "no-object-literal-type-assertion": true,
    // 禁止没必要的 return await
    "no-return-await": true,
    // 禁止在数组中出现连续的逗号，如 let foo = [,,]
    "no-sparse-arrays": true,
    // 禁止 throw 字符串，必须 throw 一个 Error 对象
    "no-string-throw": true,
    // switch 的 case 必须 return 或 break
    "no-switch-case-fall-through": true,
    // 使用实例的方法时，必须 bind 到实例上
    "no-unbound-method": [
      true,
      "ignore-static"
    ],
    // 使用 { ...foo, bar: 1 } 代替 Object.assign({}, foo, { bar: 1 })
    // 前者的类型检查更完善
    "prefer-object-spread": true,
    // parseInt 必须传入第二个参数
    "radix": true,
    // 必须使用 isNaN(foo) 而不是 foo === NaN
    "use-isnan": true,
    //
    //
    // 可维护性
    // 这些规则可以增加代码的可维护性
    //
    // 禁止函数的循环复杂度超过 20，https://en.wikipedia.org/wiki/Cyclomatic_complexity
    "cyclomatic-complexity": [
      true,
      20
    ],
    // 禁止使用废弃（被标识了 @deprecated）的 API
    "deprecation": true,
    // 一个缩进必须用四个空格替代
    "indent": [
      true,
      "spaces",
      4
    ],
    // 禁止出现重复的 import
    "no-duplicate-imports": true,
    // 禁止一个文件中出现多个相同的 namespace
    "no-mergeable-namespace": true,
    // 文件类型必须时 utf-8
    "encoding": true,
    // import 语句中，关键字之间的间距必须是一个空格
    "import-spacing": true,
    // 接口可以 implement extend 和 merge
    "interface-over-type-literal": true,
    // new 后面只必须有一个空格
    "new-parens": true,
    // 类型断言必须使用 as Type，禁止使用 <Type>
    // <Type> 容易被理解为 jsx
    "no-angle-bracket-type-assertion": true,
    // 禁止连续超过三行空行
    "no-consecutive-blank-lines": [
      true,
      3
    ],
    // 禁止使用特殊空白符（比如全角空格）
    "no-irregular-whitespace": true,
    // 禁止使用 JSDoc，因为 TypeScirpt 已经包含了大部分功能
    "no-redundant-jsdoc": true,
    // 禁止使用三斜杠引入类型定义文件
    "no-reference-import": true,
    // 禁止变量定义时赋值为 undefined
    "no-unnecessary-initializer": true,
    // 小数必须以 0. 开头，禁止以 . 开头，并且不能以 0 结尾
    "number-literal-format": true,
    // 必须使用 a = {b} 而不是 a = {b: b}
    "object-literal-shorthand": true,
    // 变量申明必须每行一个，for 循环的初始条件中除外
    "one-variable-per-declaration": [
      true,
      "ignore-for-loop"
    ],
    // if 后的 { 禁止换行
    "one-line": true,
    // 必须使用单引号，jsx 中必须使用双引号
    "quotemark": [
      true,
      "single",
      "jsx-single",
      // "jsx-double",
      "avoid-template",
      "avoid-escape"
    ],
    // 行尾必须有分号
    "semicolon": [
      true,
      "always",
      "ignore-interfaces"
    ],
    // 函数名前必须有空格
    "space-before-function-paren": [
      true,
      {
        "anonymous": "always",
        "named": "always",
        "asyncArrow": "always"
      }
    ],
    // 括号内首尾禁止有空格
    "space-within-parens": [
      true,
      0
    ],
    // 禁止 finally 内出现 return, continue, break, throw 等
    // finally 会比 catch 先执行
    "no-unsafe-finally": true,
    "vue/max-attributes-per-line": [
      2,
      {
        "singleline": 10,
        "multiline": {
          "max": 1,
          "allowFirstLine": false
        }
      }
    ],
    "vue/singleline-html-element-content-newline": "off",
    "vue/multiline-html-element-content-newline": "off",
    "vue/name-property-casing": [
      "error",
      "PascalCase"
    ],
    "vue/no-v-html": "off",
    "accessor-pairs": 2,
    "arrow-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "block-spacing": [
      2,
      "always"
    ],
    "brace-style": [
      2,
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "camelcase": [
      0,
      {
        "properties": "always"
      }
    ],
    "comma-dangle": [
      0,
      "never"
    ],
    "comma-spacing": [
      2,
      {
        "before": false,
        "after": true
      }
    ],
    "comma-style": [
      2,
      "last"
    ],
    "constructor-super": 2,
    "dot-location": [
      2,
      "property"
    ],
    "eol-last": 2,
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "generator-star-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "handle-callback-err": [
      2,
      "^(err|error)$"
    ],
    "jsx-quotes": [
      2,
      "prefer-single"
    ],
    "key-spacing": [
      2,
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "keyword-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "new-cap": [
      2,
      {
        "newIsCap": true,
        "capIsNew": false
      }
    ],
    "no-array-constructor": 2,
    "no-caller": 2,
    "no-console": false,
    "no-class-assign": 2,
    "no-cond-assign": 2,
    "no-const-assign": 2,
    "no-control-regex": 0,
    "no-delete-var": 2,
    "no-dupe-args": 2,
    "no-dupe-class-members": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-empty-character-class": 2,
    "no-empty-pattern": 2,
    "no-ex-assign": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-extra-boolean-cast": 2,
    "no-extra-parens": [
      2,
      "functions"
    ],
    "no-fallthrough": 2,
    "no-floating-decimal": 2,
    "no-func-assign": 2,
    "no-implied-eval": 2,
    "no-inner-declarations": [
      2,
      "functions"
    ],
    "no-invalid-regexp": 2,
    "no-iterator": 2,
    "no-label-var": 2,
    "no-labels": [
      2,
      {
        "allowLoop": false,
        "allowSwitch": false
      }
    ],
    "no-lone-blocks": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-multi-spaces": 2,
    "no-multi-str": 2,
    "no-multiple-empty-lines": [
      2,
      {
        "max": 1
      }
    ],
    "no-native-reassign": 2,
    "no-negated-in-lhs": 2,
    "no-new-object": 2,
    "no-new-require": 2,
    "no-new-symbol": 2,
    "no-new-wrappers": 2,
    "no-obj-calls": 2,
    "no-octal": 2,
    "no-octal-escape": 2,
    "no-path-concat": 2,
    "no-proto": 2,
    "no-redeclare": 2,
    "no-regex-spaces": 2,
    "no-return-assign": [
      2,
      "except-parens"
    ],
    "no-self-assign": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-shadow-restricted-names": 2,
    "no-spaced-func": 2,
    "no-this-before-super": 2,
    "no-throw-literal": 2,
    "no-trailing-spaces": 2,
    "no-undef": 2,
    "no-undef-init": 2,
    "no-unexpected-multiline": 2,
    "no-unmodified-loop-condition": 2,
    "no-unneeded-ternary": [
      2,
      {
        "defaultAssignment": false
      }
    ],
    "no-unreachable": 2,
    "no-unused-vars": [
      2,
      {
        "vars": "all",
        "args": "none"
      }
    ],
    "no-useless-call": 2,
    "no-useless-computed-key": 2,
    "no-useless-constructor": 2,
    "no-useless-escape": 0,
    "no-whitespace-before-property": 2,
    "no-with": 2,
    "one-var": [
      2,
      {
        "initialized": "never"
      }
    ],
    "operator-linebreak": [
      2,
      "after",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "padded-blocks": [
      2,
      "never"
    ],
    "quotes": [
      2,
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "semi": [
      0,
      "never"
    ],
    "semi-spacing": [
      2,
      {
        "before": false,
        "after": true
      }
    ],
    "space-before-blocks": [
      2,
      "always"
    ],
    "space-in-parens": [
      2,
      "never"
    ],
    "space-infix-ops": 2,
    "space-unary-ops": [
      2,
      {
        "words": true,
        "nonwords": false
      }
    ],
    "spaced-comment": [
      2,
      "always",
      {
        "markers": [
          "global",
          "globals",
          "eslint",
          "eslint-disable",
          "*package",
          "!",
          ","
        ]
      }
    ],
    "template-curly-spacing": [
      2,
      "never"
    ],
    "valid-typeof": 2,
    "wrap-iife": [
      2,
      "any"
    ],
    "yield-star-spacing": [
      2,
      "both"
    ],
    "yoda": [
      2,
      "never"
    ],
    "prefer-const": true,
    "object-curly-spacing": [
      2,
      "always",
      {
        "objectsInObjects": false
      }
    ],
    "array-bracket-spacing": [
      2,
      "never"
    ]
  },
  "rules": {
    // 禁止给类的构造函数的参数添加修饰符
    "no-parameter-properties": false,
    // 禁止使用 debugger
    "no-debugger": false,
    // 禁止行尾有空格
    "no-trailing-whitespace": false,
    // 禁止无用的表达式
    "no-unused-expression": true,
    // 定义过的变量必须使用
    "no-unused-variable": true,
    // 变量必须先定义后使用
    "no-use-before-declare": true,
    // 禁止使用 var
    "no-var-keyword": true,
    // 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外
    "triple-equals": true,
    // 指定类成员的排序规则
    "member-ordering": false,
    // 禁止将 this 赋值给其他变量，除非是解构赋值
    "no-this-assignment": [
      false,
      {
        "allowed-names": [
          "^self$",
          "^that$"
        ],
        "allow-destructuring": true
      }
    ],
    // 必须使用箭头函数，除非是单独的函数声明或是命名函数
    "only-arrow-functions": [
      true,
      "allow-declarations",
      "allow-named-functions"
    ],
    // 禁止出现空代码块，允许 catch 是空代码块
    "no-empty": [
      true,
      "allow-empty-catch"
    ],
    // 禁止无用的类型断言
    "no-unnecessary-type-assertion": true,
    // 使用 return; 而不是 return undefined;
    "return-undefined": true,
    // 禁止对 array 使用 for in 循环
    "no-for-in-array": true,
    "comment-format": [
      true,
      "check-space"
    ],
    // 单行注释格式化规则
    // 定义函数时如果用到了覆写，则必须将覆写的函数写到一起
    "adjacent-overload-signatures": true,
    // 禁止对函数的参数重新赋值
    "no-parameter-reassignment": true,
    // if 后面必须有 {，除非是单行 if
    "curly": [
      true,
      "ignore-same-line"
    ],
    // for in 内部必须有 hasOwnProperty
    "forin": true,
    // 禁止在分支条件判断中有赋值操作
    "no-conditional-assignment": true,
    // 禁止使用 new 来生成 String, Number 或 Boolean
    "no-construct": true,
    // 禁止 super 在一个构造函数中出现两次
    "no-duplicate-super": true,
    // 禁止在 switch 语句中出现重复测试表达式的 case
    "no-duplicate-switch-case": true,
    // 禁止出现重复的变量定义或函数参数名
    "no-duplicate-variable": [
      true,
      "check-parameters"
    ],
    // 禁止使用 eval
    "no-eval": true,
    // 禁止对对象字面量进行类型断言（断言成 any 是允许的）
    "no-object-literal-type-assertion": true,
    // 禁止没必要的 return await
    "no-return-await": true,
    // 禁止在数组中出现连续的逗号，如 let foo = [,,]
    "no-sparse-arrays": true,
    // 禁止 throw 字符串，必须 throw 一个 Error 对象
    "no-string-throw": true,
    // switch 的 case 必须 return 或 break
    "no-switch-case-fall-through": true,
    // 使用实例的方法时，必须 bind 到实例上
    "no-unbound-method": [
      true,
      "ignore-static"
    ],
    // 使用 { ...foo, bar: 1 } 代替 Object.assign({}, foo, { bar: 1 })
    // 前者的类型检查更完善
    "prefer-object-spread": true,
    // parseInt 必须传入第二个参数
    "radix": true,
    // 必须使用 isNaN(foo) 而不是 foo === NaN
    "use-isnan": true,
    //
    //
    // 可维护性
    // 这些规则可以增加代码的可维护性
    //
    // 禁止函数的循环复杂度超过 20，https://en.wikipedia.org/wiki/Cyclomatic_complexity
    "cyclomatic-complexity": [
      true,
      20
    ],
    // 禁止使用废弃（被标识了 @deprecated）的 API
    "deprecation": true,
    // 一个缩进必须用四个空格替代
    "indent": [
      true,
      "spaces",
      4
    ],
    // 禁止出现重复的 import
    "no-duplicate-imports": true,
    // 禁止一个文件中出现多个相同的 namespace
    "no-mergeable-namespace": true,
    // 文件类型必须时 utf-8
    "encoding": true,
    // import 语句中，关键字之间的间距必须是一个空格
    "import-spacing": true,
    // 接口可以 implement extend 和 merge
    "interface-over-type-literal": true,
    // new 后面只必须有一个空格
    "new-parens": true,
    // 类型断言必须使用 as Type，禁止使用 <Type>
    // <Type> 容易被理解为 jsx
    "no-angle-bracket-type-assertion": true,
    // 禁止连续超过三行空行
    "no-consecutive-blank-lines": [
      true,
      3
    ],
    // 禁止使用特殊空白符（比如全角空格）
    "no-irregular-whitespace": true,
    // 禁止使用 JSDoc，因为 TypeScirpt 已经包含了大部分功能
    "no-redundant-jsdoc": true,
    // 禁止使用三斜杠引入类型定义文件
    "no-reference-import": true,
    // 禁止变量定义时赋值为 undefined
    "no-unnecessary-initializer": true,
    // 小数必须以 0. 开头，禁止以 . 开头，并且不能以 0 结尾
    "number-literal-format": true,
    // 必须使用 a = {b} 而不是 a = {b: b}
    "object-literal-shorthand": true,
    // 变量申明必须每行一个，for 循环的初始条件中除外
    "one-variable-per-declaration": [
      true,
      "ignore-for-loop"
    ],
    // if 后的 { 禁止换行
    "one-line": true,
    // 必须使用单引号，jsx 中必须使用双引号
    "quotemark": [
      true,
      "single",
      "jsx-single",
      // "jsx-double",
      "avoid-template",
      "avoid-escape"
    ],
    // 行尾必须有分号
    "semicolon": [
      true,
      "always",
      "ignore-interfaces"
    ],
    // 函数名前必须有空格
    "space-before-function-paren": [
      true,
      {
        "anonymous": "always",
        "named": "always",
        "asyncArrow": "always"
      }
    ],
    // 括号内首尾禁止有空格
    "space-within-parens": [
      true,
      0
    ],
    // 禁止 finally 内出现 return, continue, break, throw 等
    // finally 会比 catch 先执行
    "no-unsafe-finally": true,
    "vue/max-attributes-per-line": [
      2,
      {
        "singleline": 10,
        "multiline": {
          "max": 1,
          "allowFirstLine": false
        }
      }
    ],
    "vue/singleline-html-element-content-newline": "off",
    "vue/multiline-html-element-content-newline": "off",
    "vue/name-property-casing": [
      "error",
      "PascalCase"
    ],
    "vue/no-v-html": "off",
    "accessor-pairs": 2,
    "arrow-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "block-spacing": [
      2,
      "always"
    ],
    "brace-style": [
      2,
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "camelcase": [
      0,
      {
        "properties": "always"
      }
    ],
    "comma-dangle": [
      0,
      "never"
    ],
    "comma-spacing": [
      2,
      {
        "before": false,
        "after": true
      }
    ],
    "comma-style": [
      2,
      "last"
    ],
    "constructor-super": 2,
    "dot-location": [
      2,
      "property"
    ],
    "eol-last": 2,
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "generator-star-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "handle-callback-err": [
      2,
      "^(err|error)$"
    ],
    "jsx-quotes": [
      2,
      "prefer-single"
    ],
    "key-spacing": [
      2,
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "keyword-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    "new-cap": [
      2,
      {
        "newIsCap": true,
        "capIsNew": false
      }
    ],
    "no-array-constructor": 2,
    "no-caller": 2,
    "no-console": false,
    "no-class-assign": 2,
    "no-cond-assign": 2,
    "no-const-assign": 2,
    "no-control-regex": 0,
    "no-delete-var": 2,
    "no-dupe-args": 2,
    "no-dupe-class-members": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-empty-character-class": 2,
    "no-empty-pattern": 2,
    "no-ex-assign": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-extra-boolean-cast": 2,
    "no-extra-parens": [
      2,
      "functions"
    ],
    "no-fallthrough": 2,
    "no-floating-decimal": 2,
    "no-func-assign": 2,
    "no-implied-eval": 2,
    "no-inner-declarations": [
      2,
      "functions"
    ],
    "no-invalid-regexp": 2,
    "no-iterator": 2,
    "no-label-var": 2,
    "no-labels": [
      2,
      {
        "allowLoop": false,
        "allowSwitch": false
      }
    ],
    "no-lone-blocks": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-multi-spaces": 2,
    "no-multi-str": 2,
    "no-multiple-empty-lines": [
      2,
      {
        "max": 1
      }
    ],
    "no-native-reassign": 2,
    "no-negated-in-lhs": 2,
    "no-new-object": 2,
    "no-new-require": 2,
    "no-new-symbol": 2,
    "no-new-wrappers": 2,
    "no-obj-calls": 2,
    "no-octal": 2,
    "no-octal-escape": 2,
    "no-path-concat": 2,
    "no-proto": 2,
    "no-redeclare": 2,
    "no-regex-spaces": 2,
    "no-return-assign": [
      2,
      "except-parens"
    ],
    "no-self-assign": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-shadow-restricted-names": 2,
    "no-spaced-func": 2,
    "no-this-before-super": 2,
    "no-throw-literal": 2,
    "no-trailing-spaces": 2,
    "no-undef": 2,
    "no-undef-init": 2,
    "no-unexpected-multiline": 2,
    "no-unmodified-loop-condition": 2,
    "no-unneeded-ternary": [
      2,
      {
        "defaultAssignment": false
      }
    ],
    "no-unreachable": 2,
    "no-unused-vars": [
      2,
      {
        "vars": "all",
        "args": "none"
      }
    ],
    "no-useless-call": 2,
    "no-useless-computed-key": 2,
    "no-useless-constructor": 2,
    "no-useless-escape": 0,
    "no-whitespace-before-property": 2,
    "no-with": 2,
    "one-var": [
      2,
      {
        "initialized": "never"
      }
    ],
    "operator-linebreak": [
      2,
      "after",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "padded-blocks": [
      2,
      "never"
    ],
    "quotes": [
      2,
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "semi": [
      0,
      "never"
    ],
    "semi-spacing": [
      2,
      {
        "before": false,
        "after": true
      }
    ],
    "space-before-blocks": [
      2,
      "always"
    ],
    "space-in-parens": [
      2,
      "never"
    ],
    "space-infix-ops": 2,
    "space-unary-ops": [
      2,
      {
        "words": true,
        "nonwords": false
      }
    ],
    "spaced-comment": [
      2,
      "always",
      {
        "markers": [
          "global",
          "globals",
          "eslint",
          "eslint-disable",
          "*package",
          "!",
          ","
        ]
      }
    ],
    "template-curly-spacing": [
      2,
      "never"
    ],
    "valid-typeof": 2,
    "wrap-iife": [
      2,
      "any"
    ],
    "yield-star-spacing": [
      2,
      "both"
    ],
    "yoda": [
      2,
      "never"
    ],
    "prefer-const": true,
    "object-curly-spacing": [
      2,
      "always",
      {
        "objectsInObjects": false
      }
    ],
    "array-bracket-spacing": [
      2,
      "never"
    ]
  },
  "rulesDirectory": []
}